

list_1 = [] # Пустой список
list_1 = list() # Функция лист, которая также создаст пустой список
list_1 = [1, 2, 3, 8]
print(list_1)
print(*list_1) # * открывает список и убирает все скобки и запятые


# С помощью цикла for можем перебирать значения
for i in list_1:
    print(i, end=' ') # end=' ' вывод значений в строку, а не столбик

print(len(list_1)) # Узнать размер списка

print(list_1[2]) # Вывод эл-та с индесом 2

print(list_1[-1]) # Вывод эл-та с конца

list_1 = [1, 5]
print(list_1)
list_1.append(8) # Функция .append() позваляет добавить эл-нт в конец списка
print(list_1)
list_1.append(85)
print(list_1)
print()

# Заполнение списка 
list_1 =[]
print(list_1)

for i in range(5):
    list_1.append(i)
    print(list_1)
print()

# Удаление последнего элемента списка.
# Метод .pop() удаляет последний элемент из списка:
    
list_1 = [12, 7, -1, 21, 0]
print(list_1.pop()) # 0 
print(list_1) # [12, 7, -1, 21]
print(list_1.pop()) # 21
print(list_1) # [12, 7, -1]
print(list_1.pop()) # -1
print(list_1) # [12, 7]
print()

# Удаление конкретного элемента из списка.
# Надо указать значение индекса в качестве аргумента функции .pop():

list_1 = [12, 7, -1, 21, 0]
print(list_1.pop(0)) # 12 
print(list_1) # [7, -1, 21, 0] 
print()

#  Добавление элемента на нужную позицию.
#  Функция insert — указание индекса (позиции) и значения.

list_1 = [12, 7, -1, 21, 0]
print(list_1)
print(list_1.insert(2, 11))
print(list_1) # [12, 7, 11, -1, 21, 0] 
print()


# Помните в конце первой лекции Вы прошли срезы строк? Также существует срез списка,
# давайте научимся изменять наш список
# Отрицательное число в индексе — счёт с конца списка

list_1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(list_1[0]) # 1
print(list_1[1]) # 2
print(list_1[len(list_1)-1]) # 10
print(list_1[-1]) # 10
print(list_1[-5]) # 6
print(list_1[:]) # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(list_1[:2]) # [1, 2]
print(list_1[len(list_1)-2:]) #[9, 10]
print(list_1[2:9]) # [3, 4, 5, 6, 7, 8, 9]
print(list_1[6:-18]) # []
print(list_1[0:len(list_1):6]) # [1, 7]
print(list_1[::6]) # [1, 7]
