package Java.Seminars.Seminar02;

import java.io.File;
import java.io.FileWriter;

import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;


//üìå –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–µ—Ä–Ω–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–∏ –≤ –≤–∏–¥–µ
//–º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫.
//üìå –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø–∏—à–µ—Ç –º–∞—Å—Å–∏–≤, –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω—ã–π –ø—Ä–µ–¥—ã–¥—É—â–∏–º
//–º–µ—Ç–æ–¥–æ–º –≤ —Ñ–∞–π–ª.
//üìå –û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –æ—à–∏–±–∫–∏ —Å –ø–æ–º–æ—â—å—é try-catch –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –í —Å–ª—É—á–∞–µ
//    –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –ª–æ–≥-—Ñ–∞–π–ª.
public class Task02_05 {
    private static Logger logger = Logger.getLogger(Task02_05.class.getName());
    public static void main(String[] args) {
        configLogger();
        String[] contentFolder = getContentFolder(".");
        writeToFile(contentFolder, "C:\\Users\\dimba\\IdeaProjects\\HelloCode\\Java\\Seminars\\Seminar02\\text1.txt");

    }

    public static String[] getContentFolder(String folderName) {

        File folder = new File(folderName);
        return folder.list();
    }

    public static void writeToFile(String[] strs, String fileName){

        try (FileWriter fw = new FileWriter(fileName)) {
            for (String str : strs) {
                fw.write(str);
                fw.write(System.lineSeparator());

            }
            logger.log(Level.INFO, "–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Ñ–∞–π–ª");


        } catch (Exception e) {
            logger.warning("–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞");
        }
    }

    public static void configLogger() {
        try {
            FileHandler fh = new FileHandler("C:\\Users\\dimba\\IdeaProjects\\HelloCode\\Java\\Seminars\\Seminar02\\log.txt", true);
            logger.addHandler(fh);
            SimpleFormatter formatter = new SimpleFormatter();
            fh.setFormatter(formatter);

        } catch (Exception e) {
            e.printStackTrace();
        }

    }
}
